[tool.poetry]
name = "serena"
version = "0.7.4"
description = "An AMQP 0-9-1 client using AnyIO."
authors = ["Lura Skye <l@veriny.tf>"]
license = "LGPL-3.0-or-later"
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Framework :: AnyIO",
]
readme = "README.rst"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
anyio = ">=3.6.2"
attrs = ">=21.4.0"
"backports.strenum" = { version = "^1.1.1",  python = "<3.11" }

[tool.poetry.group.docs.dependencies]
sphinx = "^6.1"
sphinx-rtd-theme = "^1.2.2"
sphinxcontrib-trio = "^1.1.2"
sphinx-inline-tabs = "^2023.4.21"
sphinx-autodoc-typehints = "^1.23.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
trio = "^0.22.0"
isort = "^5.12.0"
pytest-cov = "^4.1.0"

[tool.poetry.extras]
docs = ["Sphinx", "sphinxcontrib-trio", "sphinx-autodoc-typehints", "sphinx-rtd-theme",
    "sphinx-inline-tabs"]


[tool.pytest.ini_options]
log_cli_level = "5"
log_cli = true
addopts = "--cov --cov-report=html -m 'not slow'"
markers = [
    "slow: tests that are slow",
]

[tool.coverage.run]
branch = true
source = ["serena"]

[tool.coverage.report]
exclude_lines = [
    # standard tthings
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",

    # these are only used if the server is really fucking up and so don't matter.
    "raise AMQPStateError",
    "raise InvalidPayloadTypeError",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.black]
line-length = 100
